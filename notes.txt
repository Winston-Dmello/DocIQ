1 Users : {user_id, user_name, email, password, designation?, role(user/admin), division(dept/management,etc), Association?, }

3 Forms : {form_id, form_name, Category, submission_type(one-time/multiple submissions), form_data({JSON})}

 -> Users_to_forms :{user_id(FK), form_id(FK), form_status(open/close)} (Many to Many)

4 Submissions :{Submission_id, submission_data({JSON}), Status(pending/require resubmission/approved), file_path}

 -> Submissions_Mapping : {Submissions_id, user_id, form_id}

5 Documents: {Document_id, File_name, Division Name, Association?, Category, MetaData, file_path, Date...}



form creation payload:
{
    form_name: "form name",
    category: "",
    submission_type: "",
    recipients: [],
    form_data: {JSON}
}


S3 Folders:

Pending

Approved



Category, Divisions


Division id: division Name


[1, 7, 3 ,5]


forms_to_divisions


form_id: division_id


user_id | division_id




**********UPDATE 23rd FEB 2025**********
forms
-Get form by form-id (user-dashboard)

{
    form_id: id,
    form_name: name,
    form_fields: [],
    submission_type: type,
    category: cat,

}

-Get forms by user_id (viewing all forms)
{
    forms: [{form1}, {form2}, {form3}] -- form_id, form_name, status
}

submissions
- Post create a Submission 
{
    user_id: int,
    form_id: int,
    submission_data: JSON,
    files: [
        {
            "file_name": Filename, divisionname@username@formname@Filename
            "file": fileObject
        },
        {
            "file_name": Filename,
            "file": fileObject
        },
    ],
}
- Get all submissions by user_id
- Get submission by submimssion_id
- Put submission by id (update an existing submission made)
{
    form_name
    status
    submission_data
    uploaded docs:
    filenames 
}
- Delete submission by id (only if pending or rejected state)

remove submission_mappings table
put user_id, form_id and form name in submissions itself


Functionality (should just work) deadline: Monday night, Tuesday Morning

